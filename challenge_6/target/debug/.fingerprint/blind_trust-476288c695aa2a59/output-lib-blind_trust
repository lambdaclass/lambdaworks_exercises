{"message":"function `compute_private_input` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/solution.rs","byte_start":376,"byte_end":397,"line_start":13,"line_end":13,"column_start":4,"column_end":25,"is_primary":true,"text":[{"text":"fn compute_private_input<F, CS>(","highlight_start":4,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `compute_private_input` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/solution.rs:13:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compute_private_input<F, CS>(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"evaluation of constant value failed","code":{"code":"E0080","explanation":"A constant value failed to get evaluated.\n\nErroneous code example:\n\n```compile_fail,E0080\nenum Enum {\n    X = (1 << 500),\n    Y = (1 / 0),\n}\n```\n\nThis error indicates that the compiler was unable to sensibly evaluate a\nconstant expression that had to be evaluated. Attempting to divide by 0\nor causing an integer overflow are two ways to induce this error.\n\nEnsure that the expressions given can be evaluated as the desired integer type.\n\nSee the [Discriminants] section of the Reference for more information about\nsetting custom integer types on enums using the\n[`repr` attribute][repr-attribute].\n\n[discriminants]: https://doc.rust-lang.org/reference/items/enumerations.html#discriminants\n[repr-attribute]: https://doc.rust-lang.org/reference/type-layout.html#representations\n"},"level":"error","spans":[{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1873,"byte_end":1937,"line_start":57,"line_end":57,"column_start":9,"column_end":73,"is_primary":true,"text":[],"label":"the evaluated program panicked at 'Malformed hex expression.', /Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"panic!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/std/src/macros.rs","byte_start":482,"byte_end":500,"line_start":14,"line_end":14,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2021!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1601,"byte_end":1621,"line_start":48,"line_end":48,"column_start":1,"column_end":21,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"inside `UnsignedInteger::<4>::from_hex_unchecked`","code":null,"level":"note","spans":[{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1873,"byte_end":1937,"line_start":57,"line_end":57,"column_start":9,"column_end":73,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"panic!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/std/src/macros.rs","byte_start":482,"byte_end":500,"line_start":14,"line_end":14,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2021!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1601,"byte_end":1621,"line_start":48,"line_end":48,"column_start":1,"column_end":21,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"inside `FieldElement::<MontgomeryBackendPrimeField<FrConfig, 4>>::from_hex_unchecked`","code":null,"level":"note","spans":[{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/field/element.rs","byte_start":10128,"byte_end":10181,"line_start":443,"line_end":443,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"        let integer = UnsignedInteger::<NUM_LIMBS>::from_hex_unchecked(hex);","highlight_start":23,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"inside `X_COORDINATE`","code":null,"level":"note","spans":[{"file_name":"src/sith_generate_proof.rs","byte_start":952,"byte_end":988,"line_start":30,"line_end":30,"column_start":37,"column_end":73,"is_primary":true,"text":[{"text":"pub const X_COORDINATE: FrElement = FrElement::from_hex_unchecked(FLAG1);","highlight_start":37,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0080]\u001b[0m\u001b[0m\u001b[1m: evaluation of constant value failed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    panic!(\"Malformed hex expression.\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe evaluated program panicked at 'Malformed hex expression.', /Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `UnsignedInteger::<4>::from_hex_unchecked`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    panic!(\"Malformed hex expression.\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `FieldElement::<MontgomeryBackendPrimeField<FrConfig, 4>>::from_hex_unchecked`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/field/element.rs:443:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let integer = UnsignedInteger::<NUM_LIMBS>::from_hex_unchecked(hex);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `X_COORDINATE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sith_generate_proof.rs:30:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const X_COORDINATE: FrElement = FrElement::from_hex_unchecked(FLAG1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"evaluation of constant value failed","code":{"code":"E0080","explanation":"A constant value failed to get evaluated.\n\nErroneous code example:\n\n```compile_fail,E0080\nenum Enum {\n    X = (1 << 500),\n    Y = (1 / 0),\n}\n```\n\nThis error indicates that the compiler was unable to sensibly evaluate a\nconstant expression that had to be evaluated. Attempting to divide by 0\nor causing an integer overflow are two ways to induce this error.\n\nEnsure that the expressions given can be evaluated as the desired integer type.\n\nSee the [Discriminants] section of the Reference for more information about\nsetting custom integer types on enums using the\n[`repr` attribute][repr-attribute].\n\n[discriminants]: https://doc.rust-lang.org/reference/items/enumerations.html#discriminants\n[repr-attribute]: https://doc.rust-lang.org/reference/type-layout.html#representations\n"},"level":"error","spans":[{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1873,"byte_end":1937,"line_start":57,"line_end":57,"column_start":9,"column_end":73,"is_primary":true,"text":[],"label":"the evaluated program panicked at 'Malformed hex expression.', /Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"panic!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/std/src/macros.rs","byte_start":482,"byte_end":500,"line_start":14,"line_end":14,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2021!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1601,"byte_end":1621,"line_start":48,"line_end":48,"column_start":1,"column_end":21,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"inside `UnsignedInteger::<4>::from_hex_unchecked`","code":null,"level":"note","spans":[{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1873,"byte_end":1937,"line_start":57,"line_end":57,"column_start":9,"column_end":73,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs","byte_start":13981,"byte_end":14016,"line_start":458,"line_end":458,"column_start":21,"column_end":56,"is_primary":false,"text":[{"text":"                    panic!(\"Malformed hex expression.\")","highlight_start":21,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"panic!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/std/src/macros.rs","byte_start":482,"byte_end":500,"line_start":14,"line_end":14,"column_start":1,"column_end":19,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::panic::panic_2021!","def_site_span":{"file_name":"/private/tmp/rust-20230613-7622-103lepv/rustc-1.70.0-src/library/core/src/panic.rs","byte_start":1601,"byte_end":1621,"line_start":48,"line_end":48,"column_start":1,"column_end":21,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null},{"message":"inside `FieldElement::<MontgomeryBackendPrimeField<FrConfig, 4>>::from_hex_unchecked`","code":null,"level":"note","spans":[{"file_name":"/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/field/element.rs","byte_start":10128,"byte_end":10181,"line_start":443,"line_end":443,"column_start":23,"column_end":76,"is_primary":true,"text":[{"text":"        let integer = UnsignedInteger::<NUM_LIMBS>::from_hex_unchecked(hex);","highlight_start":23,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"inside `H_COORDINATE`","code":null,"level":"note","spans":[{"file_name":"src/sith_generate_proof.rs","byte_start":1026,"byte_end":1062,"line_start":31,"line_end":31,"column_start":37,"column_end":73,"is_primary":true,"text":[{"text":"pub const H_COORDINATE: FrElement = FrElement::from_hex_unchecked(FLAG2);","highlight_start":37,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0080]\u001b[0m\u001b[0m\u001b[1m: evaluation of constant value failed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    panic!(\"Malformed hex expression.\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe evaluated program panicked at 'Malformed hex expression.', /Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `UnsignedInteger::<4>::from_hex_unchecked`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/unsigned_integer/element.rs:458:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    panic!(\"Malformed hex expression.\")\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `FieldElement::<MontgomeryBackendPrimeField<FrConfig, 4>>::from_hex_unchecked`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/diegokingston/.cargo/git/checkouts/lambdaworks-f72a56fe72cb0e3b/8fcd64f/math/src/field/element.rs:443:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let integer = UnsignedInteger::<NUM_LIMBS>::from_hex_unchecked(hex);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: inside `H_COORDINATE`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/sith_generate_proof.rs:31:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const H_COORDINATE: FrElement = FrElement::from_hex_unchecked(FLAG2);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0080`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0080`.\u001b[0m\n"}
